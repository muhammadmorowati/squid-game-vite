import { useEffect, useRef } from "react";
import { Howl } from "howler";
import { useGameStore } from "../hooks/UseGameStore";

const DollMusic = () => {
  const { greenLight, greenLightCounter, timeLeft,allFinished } = useGameStore();
  const greenLightSound = useRef<Howl | null>(null);

  // ðŸŽµ Preload sound on mount
  useEffect(() => {
    greenLightSound.current = new Howl({
      src: ["sounds/green-light.mp3"],
      volume: 0.7,
      preload: true,
    });
  }, []);

  useEffect(() => {
  const sound = greenLightSound.current;
  if (!sound) return; // Ø§Ú¯Ø± Ù‡Ù†ÙˆØ² Ø³Ø§Ø®ØªÙ‡ Ù†Ø´Ø¯Ù‡ØŒ Ú©Ø§Ø±ÛŒ Ù†Ú©Ù†

  // ÙˆÙ‚ØªÛŒ ØªØ§ÛŒÙ…Ø± ØªÙ…ÙˆÙ… Ù…ÛŒØ´Ù‡ ØµØ¯Ø§ Ø±Ùˆ Ù‚Ø·Ø¹ Ú©Ù†
  if (timeLeft === 0 || allFinished) {
    sound.stop();
    return;
  }

  if (greenLight) {
    const greenLightDuration = greenLightCounter * (1000 / 60);
    const baseAudioDuration = 4700;
    const rate = baseAudioDuration / greenLightDuration;
    const clampedRate = Math.min(Math.max(rate, 0.5), 3);

    sound.stop();
    sound.rate(clampedRate);
    sound.play();
  } else {
    sound.stop();
  }

  // âœ… ØªØ§Ø¨Ø¹ cleanup Ù‡Ù…ÛŒØ´Ù‡ ÛŒØ§ void ÛŒØ§ ØªØ§Ø¨Ø¹ Ù…Ø¹ØªØ¨Ø± Ø¨Ø±Ù…ÛŒâ€ŒÚ¯Ø±Ø¯ÙˆÙ†Ù‡
  return () => {
    if (sound) sound.stop();
  };
}, [greenLight, greenLightCounter]);

  return null;
};

export default DollMusic;
